# -*- coding: utf-8 -*-
"""
@Time : 2021/8/15 13:28
@Author : 华大大不是大大
@File : homework03.py
"""

'''
1、定义一个列表[1, 2, 3]，并将列表中的头尾两个元素对调。对调后为[3, 2, 1]
2、定义一个列表，并将列表中的指定位置的两个元素对调。对调第一个和第三个元素
列表如下：[23, 65, 19, 90] 
对调后结果：[19, 65, 23, 90]
3、对列表[10, 11, 12, 13, 14, 15]翻转，调整后为[15, 14, 13, 12, 11, 10]
4、判定6是否包含列表[ 1, 6, 3, 5, 3, 4 ]
5、[ 1, 6, 3, 5, 3, 4 ]转换为元组
6、根据列表[ 1, 6, 3, 5, 3, 4 ]作为新字典的key,对应key的初始值为0，并打印新字典对象
7、循环打印出字典{'name':'aming','age':18,'school':'cema'}中的所有键和值，
8、{‘taobao’,'jingdong','alibaba','baidu','taobao'}对元素去重复  （不做）
9、分别有两个集合{1,2,1,3,4,5,6,7}，{1,2,3,8,9,7,10}，求两个集合的差集、并集、交集（不做）
10、判断9题中两个集合如果存在相同元素，则打印重复，否则打印无重复
11、list7=[1,2,3,4,5]根据列表中的元素作为字典中的key,及初始值为0，打印这个新的字典，不用fromkey方法实现
'''

# 定义一个列表[1, 2, 3]，并将列表中的头尾两个元素对调。对调后为[3, 2, 1]
ls_1 = [1, 2, 3]
ls_1[0], ls_1[-1] = ls_1[-1], ls_1[0]
print(ls_1)

# 定义一个列表，并将列表中的指定位置的两个元素对调。对调第一个和第三个元素
# 列表如下：[23, 65, 19, 90]
# 对调后结果：[19, 65, 23, 90]
ls_2 = [23, 65, 19, 90]
ls_2[0], ls_2[2] = ls_2[2], ls_2[0]
print(ls_2)

# 对列表[10, 11, 12, 13, 14, 15]翻转，调整后为[15, 14, 13, 12, 11, 10]
ls_3 = [10, 11, 12, 13, 14, 15]
ls_3.reverse()
print(ls_3)

# 判定6是否包含列表[ 1, 6, 3, 5, 3, 4 ]
ls_4 = [1, 6, 3, 5, 3, 4]
print(ls_4.count(6))

# [ 1, 6, 3, 5, 3, 4 ]转换为元组
tup_1 = tuple(ls_4)
print(tup_1)

# 根据列表[ 1, 6, 3, 5, 3, 4 ]作为新字典的key,对应key的初始值为0，并打印新字典对象
dic_1 = {}
# for i in ls_4:
#     dic_1[i] = 0
dic_1 = dic_1.fromkeys(ls_4, 0)
print(dic_1)

# 循环打印出字典{'name':'aming','age':18,'school':'cema'}中的所有键和值，
dic_2 = {'name': 'aming', 'age': 18, 'school': 'cema'}
for key, value in dic_2.items():
    print(key, value)

# {‘taobao’,'jingdong','alibaba','baidu','taobao'}对元素去重复  （不做）
dic_3 = {'taobao', 'jingdong', 'alibaba', 'baidu', 'taobao'}
set_2 = set(dic_3)
print(set_2, type(dic_3))

# 分别有两个集合{1,2,1,3,4,5,6,7}，{1,2,3,8,9,7,10}，求两个集合的差集、并集、交集（不做）
set_3 = {1, 2, 1, 3, 4, 5, 6, 7}
set_4 = {1, 2, 3, 8, 9, 7, 10}
# set_4 = {12,31,111,12324,141234}
print("差集:", set_4 - set_3)
print("并集:", set_3 | set_4)
print("交集:", set_4 & set_3)

# 判断9题中两个集合如果存在相同元素，则打印重复，否则打印无重复
# if set_3.isdisjoint(set_4):
#     print('不重复')
# else:
#     print("重复")
if set_4 & set_3:
    print('重复')
else:
    print("不重复")

# list7=[1,2,3,4,5]根据列表中的元素作为字典中的key,及初始值为0，打印这个新的字典，不用fromkey方法实现
list7 = [1, 2, 3, 4, 5]
dic_4 = {}
for i in list7:
    dic_4[i] = dic_4.get(i, 0)
print(dic_4)
